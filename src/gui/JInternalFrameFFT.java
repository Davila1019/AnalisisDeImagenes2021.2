/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import frecuencias.Gestor;
import frecuencias.HerramientasColor;
import herramientas.HerramientasImagen;
import java.awt.Image;
import java.awt.image.BufferedImage;
import frecuencias.NumeroComplejo;

/**
 *
 * @author Abelardo
 */
public class JInternalFrameFFT extends javax.swing.JInternalFrame {
    private JInternalFrameImagen internal;
    private Image imagenOriginal, nueva;
    /**
     * Creates new form JInternalFrameFFT
     */
    public JInternalFrameFFT(JInternalFrameImagen internal) {
        this.internal=internal;
        this.imagenOriginal = herramientas.HerramientasImagen.copiarImagen(internal.getImagenOriginal());
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Tranformada de Fourier");

        jRadioButton1.setText("Canal Rojo");

        jRadioButton2.setText("Canal Azul");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Canal Verde");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Aplicar Transformada");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton2)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BufferedImage bi = HerramientasImagen.toBufferedImage(imagenOriginal);
        Gestor gestor = new Gestor();
        if((this.jRadioButton1.isSelected()== true) && (this.jRadioButton2.isSelected()==false) && (this.jRadioButton3.isSelected()== false)) {
            NumeroComplejo[][] imagennueva = gestor.obtenerDatosPorCanal(bi, HerramientasColor.CanalColor.ROJO);
            BufferedImage biRes = gestor.obtenerImagenFrecuenciasRojas(imagennueva, bi.getWidth(),
                     bi.getHeight(), true);
            nueva = herramientas.HerramientasImagen.toImage(biRes);
        }else if((this.jRadioButton1.isSelected()== false) && (this.jRadioButton2.isSelected()==true) && (this.jRadioButton3.isSelected()== false)) {
            NumeroComplejo[][] imagennueva = gestor.obtenerDatosPorCanal(bi, HerramientasColor.CanalColor.AZUL);
            BufferedImage biRes = gestor.obtenerImagenFrecuenciasAzules(imagennueva, bi.getWidth(),
                     bi.getHeight(), true);
            nueva = herramientas.HerramientasImagen.toImage(biRes);
        }else if((this.jRadioButton1.isSelected()== false) && (this.jRadioButton2.isSelected()==false) && (this.jRadioButton3.isSelected()== true)) {
            NumeroComplejo[][] imagennueva = gestor.obtenerDatosPorCanal(bi, HerramientasColor.CanalColor.VERDE);
            BufferedImage biRes = gestor.obtenerImagenFrecuenciasVerdes(imagennueva, bi.getWidth(),
                     bi.getHeight(), true);
            nueva = herramientas.HerramientasImagen.toImage(biRes);
        }
        internal.setImagen(nueva);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    // End of variables declaration//GEN-END:variables
}
